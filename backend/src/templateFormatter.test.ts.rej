diff a/backend/src/templateFormatter.test.ts b/backend/src/templateFormatter.test.ts	(rejected hunks)
@@ -4 +4 @@ import { parseTemplate, renderParsedTemplate, renderTemplate, TemplateSafeValueC
-test("Parses plain string templates correctly", (t) => {
+test("Parses plain string templates correctly", t => {
@@ -9 +9 @@ test("Parses plain string templates correctly", (t) => {
-test("Parses templates with variables correctly", (t) => {
+test("Parses templates with variables correctly", t => {
@@ -21 +21 @@ test("Parses templates with variables correctly", (t) => {
-test("Parses templates with function variables correctly", (t) => {
+test("Parses templates with function variables correctly", t => {
@@ -33 +33 @@ test("Parses templates with function variables correctly", (t) => {
-test("Parses function variables with variable arguments correctly", (t) => {
+test("Parses function variables with variable arguments correctly", t => {
@@ -52 +52 @@ test("Parses function variables with variable arguments correctly", (t) => {
-test("Parses function variables with function variable arguments correctly", (t) => {
+test("Parses function variables with function variable arguments correctly", t => {
@@ -76 +76 @@ test("Parses function variables with function variable arguments correctly", (t)
-test("Renders a parsed template correctly", async (t) => {
+test("Renders a parsed template correctly", async t => {
@@ -94 +94 @@ test("Renders a parsed template correctly", async (t) => {
-test("Supports base values in renderTemplate", async (t) => {
+test("Supports base values in renderTemplate", async t => {
@@ -99 +99 @@ test("Supports base values in renderTemplate", async (t) => {
-test("Edge case #1", async (t) => {
+test("Edge case #1", async t => {
@@ -105 +105 @@ test("Edge case #1", async (t) => {
-test("Parses empty string args as empty strings", async (t) => {
+test("Parses empty string args as empty strings", async t => {
