diff a/backend/src/plugins/Mutes/functions/muteUser.ts b/backend/src/plugins/Mutes/functions/muteUser.ts	(rejected hunks)
@@ -70,2 +70,2 @@ export async function muteUser(
-        const managedRoles = pluginData.guild.roles.cache.filter((x) => x.managed).map((y) => y.id);
-        newRoles = currentUserRoles.filter((r) => !managedRoles.includes(r));
+        const managedRoles = pluginData.guild.roles.cache.filter(x => x.managed).map(y => y.id);
+        newRoles = currentUserRoles.filter(r => !managedRoles.includes(r));
@@ -75 +75 @@ export async function muteUser(
-      newRoles = currentUserRoles.filter((x) => !(<string[]>removeRoles).includes(x));
+      newRoles = currentUserRoles.filter(x => !(<string[]>removeRoles).includes(x));
@@ -85 +85 @@ export async function muteUser(
-      rolesToRestore = currentUserRoles.filter((x) => (<string[]>restoreRoles).includes(x));
+      rolesToRestore = currentUserRoles.filter(x => (<string[]>restoreRoles).includes(x));
@@ -103 +103 @@ export async function muteUser(
-        const zepRoles = pluginData.guild.roles.cache.filter((x) => zep!.roles.cache.has(x.id));
+        const zepRoles = pluginData.guild.roles.cache.filter(x => zep!.roles.cache.has(x.id));
@@ -105 +105 @@ export async function muteUser(
-        if (zepRoles.size >= 0 && zepRoles.some((zepRole) => zepRole.position > actualMuteRole.position)) {
+        if (zepRoles.size >= 0 && zepRoles.some(zepRole => zepRole.position > actualMuteRole.position)) {
