diff a/backend/src/data/GuildCounters.ts b/backend/src/data/GuildCounters.ts	(rejected hunks)
@@ -20 +20,5 @@ async function deleteCountersMarkedToBeDeleted(): Promise<void> {
-  await getRepository(Counter).createQueryBuilder().where("delete_at <= NOW()").delete().execute();
+  await getRepository(Counter)
+    .createQueryBuilder()
+    .where("delete_at <= NOW()")
+    .delete()
+    .execute();
@@ -24 +28,5 @@ async function deleteTriggersMarkedToBeDeleted(): Promise<void> {
-  await getRepository(CounterTrigger).createQueryBuilder().where("delete_at <= NOW()").delete().execute();
+  await getRepository(CounterTrigger)
+    .createQueryBuilder()
+    .where("delete_at <= NOW()")
+    .delete()
+    .execute();
@@ -92 +100,4 @@ export class GuildCounters extends BaseGuildRepository {
-    const deleteAt = moment.utc().add(DELETE_UNUSED_COUNTERS_AFTER, "ms").format(DBDateFormat);
+    const deleteAt = moment
+      .utc()
+      .add(DELETE_UNUSED_COUNTERS_AFTER, "ms")
+      .format(DBDateFormat);
@@ -100 +111,5 @@ export class GuildCounters extends BaseGuildRepository {
-    await this.counters.createQueryBuilder().where("delete_at <= NOW()").delete().execute();
+    await this.counters
+      .createQueryBuilder()
+      .where("delete_at <= NOW()")
+      .delete()
+      .execute();
@@ -218 +233,4 @@ export class GuildCounters extends BaseGuildRepository {
-      const deleteAt = moment.utc().add(DELETE_UNUSED_COUNTER_TRIGGERS_AFTER, "ms").format(DBDateFormat);
+      const deleteAt = moment
+        .utc()
+        .add(DELETE_UNUSED_COUNTER_TRIGGERS_AFTER, "ms")
+        .format(DBDateFormat);
@@ -222 +240 @@ export class GuildCounters extends BaseGuildRepository {
-          id: In(triggersToMark.map((t) => t.id)),
+          id: In(triggersToMark.map(t => t.id)),
@@ -232 +250,5 @@ export class GuildCounters extends BaseGuildRepository {
-    await this.counterTriggers.createQueryBuilder().where("delete_at <= NOW()").delete().execute();
+    await this.counterTriggers
+      .createQueryBuilder()
+      .where("delete_at <= NOW()")
+      .delete()
+      .execute();
@@ -259 +281 @@ export class GuildCounters extends BaseGuildRepository {
-    return connection.transaction(async (entityManager) => {
+    return connection.transaction(async entityManager => {
@@ -311 +333 @@ export class GuildCounters extends BaseGuildRepository {
-    return connection.transaction(async (entityManager) => {
+    return connection.transaction(async entityManager => {
@@ -359 +381 @@ export class GuildCounters extends BaseGuildRepository {
-    return connection.transaction(async (entityManager) => {
+    return connection.transaction(async entityManager => {
@@ -376 +398 @@ export class GuildCounters extends BaseGuildRepository {
-          matchingValues.map((row) => ({
+          matchingValues.map(row => ({
@@ -384 +406 @@ export class GuildCounters extends BaseGuildRepository {
-      return matchingValues.map((row) => ({
+      return matchingValues.map(row => ({
@@ -410 +432 @@ export class GuildCounters extends BaseGuildRepository {
-    return connection.transaction(async (entityManager) => {
+    return connection.transaction(async entityManager => {
@@ -449 +471 @@ export class GuildCounters extends BaseGuildRepository {
-    return connection.transaction(async (entityManager) => {
+    return connection.transaction(async entityManager => {
@@ -477 +499 @@ export class GuildCounters extends BaseGuildRepository {
-          id: In(matchingValues.map((v) => v.triggerStateId)),
+          id: In(matchingValues.map(v => v.triggerStateId)),
@@ -481 +503 @@ export class GuildCounters extends BaseGuildRepository {
-      return matchingValues.map((row) => ({
+      return matchingValues.map(row => ({
